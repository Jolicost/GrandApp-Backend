{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/activities/activities.component.css","webpack:///./src/app/components/activities/activities.component.html","webpack:///./src/app/components/activities/activities.component.ts","webpack:///./src/app/components/activity-details/activity-details.component.css","webpack:///./src/app/components/activity-details/activity-details.component.html","webpack:///./src/app/components/activity-details/activity-details.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dialog/dialog-content.html","webpack:///./src/app/components/dialog/dialog.component.css","webpack:///./src/app/components/dialog/dialog.component.html","webpack:///./src/app/components/dialog/dialog.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/side-bar/side-bar.component.css","webpack:///./src/app/components/side-bar/side-bar.component.html","webpack:///./src/app/components/side-bar/side-bar.component.ts","webpack:///./src/app/components/top-bar/top-bar.component.css","webpack:///./src/app/components/top-bar/top-bar.component.html","webpack:///./src/app/components/top-bar/top-bar.component.ts","webpack:///./src/app/components/user-activities/user-activities.component.css","webpack:///./src/app/components/user-activities/user-activities.component.html","webpack:///./src/app/components/user-activities/user-activities.component.ts","webpack:///./src/app/components/user-profile/user-profile.component.css","webpack:///./src/app/components/user-profile/user-profile.component.html","webpack:///./src/app/components/user-profile/user-profile.component.ts","webpack:///./src/app/components/users/users.component.css","webpack:///./src/app/components/users/users.component.html","webpack:///./src/app/components/users/users.component.ts","webpack:///./src/app/services/activities/activities.service.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/dialog/dialog.service.ts","webpack:///./src/app/services/entity/entity.service.ts","webpack:///./src/app/services/guard/auth-guard.service.ts","webpack:///./src/app/services/messages/messages.service.ts","webpack:///./src/app/services/reverseGeocoding/reverse-geocoding.service.ts","webpack:///./src/app/services/sidebar/sidebar.service.ts","webpack:///./src/app/services/upload/upload-images.service.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/app/services/userLocation/user-location.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ActivitiesComponent } from './components/activities/activities.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { UserActivitiesComponent } from './components/user-activities/user-activities.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ActivityDetailsComponent } from './components/activity-details/activity-details.component';\r\nimport { AuthGuardService as AuthGuard } from './services/guard/auth-guard.service';\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n    { path: 'login', component: LoginComponent },\r\n    {\r\n        path: 'dashboard',\r\n        component: DashboardComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'activities',\r\n        component: ActivitiesComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    { path: 'users', component: UsersComponent, canActivate: [AuthGuard] },\r\n    {\r\n        path: 'userActivities',\r\n        component: UserActivitiesComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'activity/:id',\r\n        component: ActivityDetailsComponent,\r\n        canActivate: [AuthGuard]\r\n    },\r\n    {\r\n        path: 'userinfo',\r\n        component: UserProfileComponent,\r\n        canActivate: [AuthGuard]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"mat-sidenav-content {\\r\\n    padding: 30px;\\r\\n}\"","module.exports = \"<mat-toolbar style=\\\"height: 50px; background-color: grey\\\">\\r\\n    <app-top-bar></app-top-bar>\\r\\n</mat-toolbar>\\r\\n\\r\\n<div class=\\\"content\\\">\\r\\n    <mat-sidenav-container class=\\\"side-bar-container\\\" style=\\\"position: absolute; width: 100%; height: 100%;\\\">\\r\\n        <mat-sidenav id=\\\"sidbar\\\" #sidenav [opened]=\\\"opened\\\" mode=\\\"side\\\">\\r\\n            <div class=\\\"side content\\\">\\r\\n                <app-side-bar></app-side-bar>\\r\\n            </div>\\r\\n        </mat-sidenav>\\r\\n\\r\\n        <mat-sidenav-content>\\r\\n            <router-outlet></router-outlet>\\r\\n        </mat-sidenav-content>\\r\\n\\r\\n    </mat-sidenav-container>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { SidebarService } from './services/sidebar/sidebar.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    opened = false;\r\n\r\n    constructor(private sidebarService: SidebarService) {\r\n        this.sidebarService.opened$.subscribe(status => {\r\n            if (status === 'open') {\r\n                this.opened = true;\r\n            } else {\r\n                this.opened = false;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n// Angular Material\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatInputModule } from '@angular/material';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\nimport { TopBarComponent } from './components/top-bar/top-bar.component';\r\nimport { SideBarComponent } from './components/side-bar/side-bar.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ActivitiesComponent } from './components/activities/activities.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { UserActivitiesComponent } from './components/user-activities/user-activities.component';\r\nimport {\r\n    DialogComponent,\r\n    DialogContentComponent\r\n} from './components/dialog/dialog.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ActivityDetailsComponent } from './components/activity-details/activity-details.component';\r\n\r\n// Reactive forms\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n// Angular google map\r\nimport { AgmCoreModule } from '@agm/core';\r\n\r\n// Angular image compress and edit\r\nimport { Ng2ImgMaxModule } from 'ng2-img-max';\r\n\r\n// Angular authentification\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        TopBarComponent,\r\n        SideBarComponent,\r\n        DashboardComponent,\r\n        ActivitiesComponent,\r\n        UsersComponent,\r\n        DialogComponent,\r\n        DialogContentComponent,\r\n        UserActivitiesComponent,\r\n        LoginComponent,\r\n        ActivityDetailsComponent,\r\n        UserProfileComponent\r\n    ],\r\n    entryComponents: [DialogContentComponent], // per fer servir el dialogcontentComponent\r\n    imports: [\r\n        HttpClientModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        MatSidenavModule,\r\n        MatCheckboxModule,\r\n        MatToolbarModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSelectModule,\r\n        AgmCoreModule.forRoot({\r\n            apiKey: 'AIzaSyDBNBmRlzQDTVzB07XLJbuusxIh84qXOOg'\r\n        }),\r\n        Ng2ImgMaxModule,\r\n        JwtModule.forRoot({\r\n            config: {\r\n                tokenGetter: () => {\r\n                    return localStorage.getItem('token');\r\n                },\r\n                whitelistedDomains: ['localhost:3001'],\r\n                blacklistedRoutes: ['localhost:3001/auth/']\r\n            }\r\n        })\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"activities-content\\\">\\r\\n    <h1>Activities list</h1>\\r\\n    <div class=\\\"ui divider\\\"></div>\\r\\n    <div class=\\\"top-controls\\\" style=\\\"text-align: right; padding: 20px\\\">\\r\\n        Table size:\\r\\n        <select class=\\\"ui dropdown\\\" (change)=\\\"setPageSize($event)\\\">\\r\\n            <option value=\\\"4\\\">4</option>\\r\\n            <option value=\\\"6\\\">6</option>\\r\\n            <option value=\\\"8\\\">8</option>\\r\\n            <option selected=\\\"selected\\\">10</option>\\r\\n        </select>\\r\\n        <button class=\\\"ui labeled icon blue button\\\" (click)=\\\"openModal({mode: 'addActivity', obj: null})\\\" style=\\\"margin-left: 50px;\\\">\\r\\n            <i class=\\\"add icon\\\"></i>\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"table-content\\\">\\r\\n        <table class=\\\"ui celled table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Title</th>\\r\\n                    <th>Decription</th>\\r\\n                    <th>Start date</th>\\r\\n                    <th>End date</th>\\r\\n                    <th>Address</th>\\r\\n                    <th></th>\\r\\n                    <th></th>\\r\\n                    <th></th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor='let activity of activities'>\\r\\n                    <td>{{ activity.title }}</td>\\r\\n                    <td>{{ activity.description }}</td>\\r\\n                    <td [innerHtml]=\\\"timeConverter(activity.timestampStart)\\\"></td>\\r\\n                    <td [innerHtml]=\\\"timeConverter(activity.timestampEnd)\\\"></td>\\r\\n                    <td>{{ activity.address }}</td>\\r\\n                    <td style=\\\"text-align: center\\\"><button class=\\\"ui icon green button\\\" (click)=\\\"showDetails(activity.id)\\\">\\r\\n                            <i class=\\\"th list icon\\\"></i>\\r\\n                        </button></td>\\r\\n                    <td style=\\\"text-align: center\\\"><button class=\\\"ui icon red button\\\" (click)=\\\"openModal({mode: 'deleteActivity', obj: activity})\\\">\\r\\n                            <i class=\\\"trash icon\\\"></i>\\r\\n                        </button></td>\\r\\n                    <td style=\\\"text-align: center\\\"><button class=\\\"ui icon button\\\" (click)=\\\"openModal({mode: 'editActivity', obj: activity})\\\">\\r\\n                            <i class=\\\"edit icon\\\"></i>\\r\\n                        </button></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n                <tr>\\r\\n                    <th colspan=\\\"9\\\">\\r\\n                        <app-dialog></app-dialog>\\r\\n                        <div class=\\\"ui right floated pagination menu\\\">\\r\\n                            <a class=\\\"icon item\\\">\\r\\n                                <i class=\\\"left chevron icon\\\"></i>\\r\\n                            </a>\\r\\n                            <a class=\\\"item\\\" *ngFor=\\\"let loop of loopTimes\\\" (click)=\\\"getGamesPara(loop + 1)\\\">{{loop +\\r\\n                                1}}</a>\\r\\n                            <a class=\\\"icon item\\\">\\r\\n                                <i class=\\\"right chevron icon\\\"></i>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </tfoot>\\r\\n        </table>\\r\\n        <!--app-snack-bar></app-snack-bar-->\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DialogService } from '../../services/dialog/dialog.service';\r\nimport { ActivitiesService } from '../../services/activities/activities.service';\r\nimport { Activity } from '../../models/activity';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-activities',\r\n    templateUrl: './activities.component.html',\r\n    styleUrls: ['./activities.component.css']\r\n})\r\nexport class ActivitiesComponent implements OnInit {\r\n    activities: Array<Activity> = [];\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private activitiesService: ActivitiesService,\r\n        private router: Router\r\n    ) {\r\n        this.activitiesService.getActivities().subscribe(res => {\r\n            this.activities = res;\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.activitiesService.activity$.subscribe(activityTable => {\r\n            this.activitiesService.getActivities().subscribe(res => {\r\n                this.activities = res;\r\n            });\r\n        });\r\n    }\r\n\r\n    timeConverter(UNIX_timestamp) {\r\n        const a = new Date(UNIX_timestamp * 1000);\r\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        const year = a.getFullYear();\r\n        const month = months[a.getMonth()];\r\n        const date = a.getDate();\r\n        const hour = a.getHours();\r\n        const min = a.getMinutes();\r\n        const sec = a.getSeconds();\r\n        const time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n        return time;\r\n    }\r\n\r\n    openModal(mode) {\r\n        this.dialogService.openDialog(mode);\r\n    }\r\n\r\n    showDetails(id) {\r\n        // console.log('id: ', id);\r\n        this.router.navigate(['/activity', id]);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>Activity details:</h1>\\r\\n\\r\\n<table class=\\\"ui definition table\\\">\\r\\n    <tbody>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity title</td>\\r\\n            <td>\\r\\n                <p *ngIf=\\\"activitySelected\\\">{{ activitySelected.title }}</p>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity description</td>\\r\\n            <td>\\r\\n                <p *ngIf=\\\"activitySelected\\\">{{ activitySelected.description }}</p>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity rating</td>\\r\\n            <td>\\r\\n                <p *ngIf=\\\"activitySelected\\\">{{ activitySelected.rating }}</p>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity location</td>\\r\\n            <td>\\r\\n                <p *ngIf=\\\"activitySelected\\\">{{ completeStreetName }}</p>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity start</td>\\r\\n            <td *ngIf=\\\"activitySelected\\\" [innerHtml]=\\\"timeConverter(activitySelected.timestampStart)\\\"></td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity end</td>\\r\\n            <td *ngIf=\\\"activitySelected\\\" [innerHtml]=\\\"timeConverter(activitySelected.timestampEnd)\\\"></td>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"activitySelected\\\">\\r\\n            <td class=\\\"two wide column\\\">Activity participants</td>\\r\\n            <td>\\r\\n                <ul *ngFor=\\\"let p of participants\\\">\\r\\n                    <li><span style=\\\"color: red\\\">ID: </span>{{p.id}}</li>\\r\\n                    <li><span style=\\\"color: red\\\">Name: </span>{{p.name}}</li>\\r\\n                </ul>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity address</td>\\r\\n            <td>\\r\\n                <p *ngIf=\\\"activitySelected\\\">{{ activitySelected.address }}</p>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity activity type</td>\\r\\n            <td>\\r\\n                <p *ngIf=\\\"activitySelected\\\">{{ activitySelected.activityType }}</p>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity capacity</td>\\r\\n            <td>\\r\\n                <p *ngIf=\\\"activitySelected\\\">{{ activitySelected.capacity }}</p>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity price</td>\\r\\n            <td>\\r\\n                <p *ngIf=\\\"activitySelected\\\">{{ activitySelected.price }}</p>\\r\\n            </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n            <td class=\\\"two wide column\\\">Activity images:</td>\\r\\n            <td>\\r\\n                <div *ngIf=\\\"activitySelected\\\">\\r\\n                    <ul *ngFor=\\\"let i of activitySelected.images\\\">\\r\\n                        <li>\\r\\n                            <img src=\\\"{{ activitySelected.images }}\\\" height=\\\"100px\\\" width=\\\"100px\\\">\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"ui left aligned basic segment\\\">\\r\\n    <button class=\\\"ui centered aligned button\\\" (click)=\\\"goBack()\\\">Back</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { Activity } from 'src/app/models/activity';\r\nimport { ActivitiesService } from 'src/app/services/activities/activities.service';\r\nimport { UserService } from 'src/app/services/user/user.service';\r\nimport { ReverseGeocodingService } from 'src/app/services/reverseGeocoding/reverse-geocoding.service';\r\n\r\n@Component({\r\n    selector: 'app-activity-details',\r\n    templateUrl: './activity-details.component.html',\r\n    styleUrls: ['./activity-details.component.css']\r\n})\r\nexport class ActivityDetailsComponent implements OnInit, OnDestroy {\r\n    id: number;\r\n    private sub: any;\r\n    activitySelected: Activity;\r\n    usersID = <any>[];\r\n    participants = <any>[];\r\n    completeStreetName;\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private activitiesServices: ActivitiesService,\r\n        private router: Router,\r\n        private userService: UserService,\r\n        private reverseGeocodingService: ReverseGeocodingService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.sub = this.activatedRoute.params.subscribe(params => {\r\n            this.id = params['id'];\r\n        });\r\n\r\n        this.activitiesServices.getActivity(this.id).subscribe(act => {\r\n            this.activitySelected = act;\r\n            this.usersID = act.participants;\r\n            this.usersID.forEach(userID => {\r\n                this.userService.getUserInfo(userID).subscribe(res => {\r\n                    this.participants.push({\r\n                        id: res._id,\r\n                        name: res.completeName\r\n                    });\r\n                });\r\n                // console.log('participants name:', this.participants);\r\n            });\r\n            // show the street name with the lat and long\r\n            this.reverseGeocodingService.convertToStreet(this.activitySelected.lat, this.activitySelected.long).subscribe(res => {\r\n                this.completeStreetName = res.results[0].formatted_address;\r\n            });\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.sub.unsubscribe();\r\n    }\r\n    goBack() {\r\n        this.router.navigate(['/activities']);\r\n    }\r\n\r\n    timeConverter(UNIX_timestamp) {\r\n        const a = new Date(UNIX_timestamp * 1000);\r\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n        const year = a.getFullYear();\r\n        const month = months[a.getMonth()];\r\n        const date = a.getDate();\r\n        const hour = a.getHours();\r\n        const min = a.getMinutes();\r\n        const sec = a.getSeconds();\r\n        const time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n        return time;\r\n    }\r\n}\r\n","module.exports = \".countNumber {\\r\\n    font-size: 30px;\\r\\n    line-height: 47px;\\r\\n    font-weight: 600;\\r\\n    color: #87CEEB;\\r\\n}\\r\\n\\r\\n#box {\\r\\n    border: 1px solid #000000;\\r\\n    margin-top: 50px;\\r\\n}\\r\\n\\r\\n#myChart {\\r\\n    height: 100px;\\r\\n    width: 50px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"ui grid\\\" id='box'>\\r\\n    <div class=\\\"four wide column\\\">\\r\\n        <div class=\\\"totalUsers\\\">\\r\\n            <i class=\\\"user icon\\\" style=\\\"white-space: nowrap;\\\"> Total Users</i>\\r\\n            <p class='countNumber'>{{ totalUser }}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"four wide column\\\">\\r\\n        <div class=\\\"totalActivities\\\">\\r\\n            <i class=\\\"game icon\\\" style=\\\"white-space: nowrap;\\\"> Total Activities</i>\\r\\n            <p class='countNumber'>{{ totalAct }}</p>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"four wide column\\\">\\r\\n        <div class=\\\"totalConnections\\\">\\r\\n            <i class=\\\"world icon\\\" style=\\\"white-space: nowrap;\\\"> Total Connections</i>\\r\\n            <p class='countNumber'>9049</p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class='ui grid' id='box'>\\r\\n    <div class=\\\"eight wide column\\\">\\r\\n        <canvas id=\\\"myChart\\\"></canvas>\\r\\n    </div>\\r\\n    <div class=\\\"eight wide column\\\">\\r\\n        <canvas id=\\\"myChart2\\\"></canvas>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Chart } from 'chart.js';\r\nimport { UserService } from 'src/app/services/user/user.service';\r\nimport { ActivitiesService } from 'src/app/services/activities/activities.service';\r\nimport { EntityService } from 'src/app/services/entity/entity.service';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    chart = [];\r\n    totalUser;\r\n    totalAct;\r\n    entityId;\r\n    entityStatsTypeAct = {};\r\n    entityStatsHours = {};\r\n    entityTypeActKeys = [];\r\n    entityTypeActValues = [];\r\n    entityHoursActKeys = [];\r\n    entityHoursActValues = [];\r\n    allBorderColors = [\r\n        'rgba(183, 28, 28, 1)',\r\n        'rgba(136, 14, 79, 1)',\r\n        'rgba(74, 20, 140, 1)',\r\n        'rgba(26, 35, 126, 1)',\r\n        'rgba(13, 71, 161, 1)',\r\n        'rgba(0, 96, 100, 1)',\r\n        'rgba(0, 77, 64, 1)',\r\n        'rgba(27, 94, 32, 1)',\r\n        'rgba(130, 119, 23, 1)',\r\n        'rgba(245, 127, 23, 1)',\r\n        'rgba(230, 81, 0, 1)',\r\n        'rgba(62, 39, 35, 1)'\r\n    ];\r\n    allBackgroundColors = [\r\n        'rgba(183, 28, 28, 0.2)',\r\n        'rgba(136, 14, 79, 0.2)',\r\n        'rgba(74, 20, 140, 0.2)',\r\n        'rgba(26, 35, 126, 0.2)',\r\n        'rgba(13, 71, 161, 0.2)',\r\n        'rgba(0, 96, 100, 0.2)',\r\n        'rgba(0, 77, 64, 0.2)',\r\n        'rgba(27, 94, 32, 0.2)',\r\n        'rgba(130, 119, 23, 0.2)',\r\n        'rgba(245, 127, 23, 0.2)',\r\n        'rgba(230, 81, 0, 0.2)',\r\n        'rgba(62, 39, 35, 0.2)'\r\n    ];\r\n    size1;\r\n    constructor(\r\n        private userService: UserService,\r\n        private actService: ActivitiesService,\r\n        private entityService: EntityService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.userService.verify().subscribe(userInfo => {\r\n            this.entityId = userInfo.entity;\r\n            this.entityService\r\n                .getEntityStatisticsActivities(this.entityId)\r\n                .subscribe(entityInfo => {\r\n                    this.entityStatsTypeAct = entityInfo.types;\r\n                    this.entityStatsHours = entityInfo.hours;\r\n                    this.entityTypeActKeys = Object.keys(\r\n                        this.entityStatsTypeAct\r\n                    );\r\n                    this.entityTypeActValues = Object.values(\r\n                        this.entityStatsTypeAct\r\n                    );\r\n                    this.entityHoursActKeys = Object.keys(\r\n                        this.entityStatsHours\r\n                    );\r\n                    this.entityHoursActValues = Object.values(\r\n                        this.entityStatsHours\r\n                    );\r\n                    this.totalAct = entityInfo.nActivities;\r\n                    this.size1 = this.entityTypeActKeys.length;\r\n                    const borderColorsPick = [];\r\n                    const backgroundColorsPick = [];\r\n                    for (let i = 0; i < this.size1; i++) {\r\n                        borderColorsPick[i] = this.allBorderColors[i];\r\n                        backgroundColorsPick[i] = this.allBackgroundColors[i];\r\n                        console.log('Border Pick tenim', borderColorsPick[i]);\r\n                        console.log('Back Pick tenim', borderColorsPick[i]);\r\n                    }\r\n                    this.chart = new Chart('myChart', {\r\n                        type: 'bar',\r\n                        data: {\r\n                            labels: this.entityTypeActKeys,\r\n                            datasets: [\r\n                                {\r\n                                    label: '# of Activities per Theme',\r\n                                    data: this.entityTypeActValues,\r\n                                    backgroundColor: backgroundColorsPick,\r\n                                    borderColor: borderColorsPick,\r\n                                    borderWidth: 1\r\n                                }\r\n                            ]\r\n                        },\r\n                        options: {\r\n                            scales: {\r\n                                yAxes: [\r\n                                    {\r\n                                        ticks: {\r\n                                            beginAtZero: true\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    });\r\n                    this.chart = new Chart('myChart2', {\r\n                        type: 'line',\r\n                        data: {\r\n                            labels: this.entityHoursActKeys,\r\n                            datasets: [\r\n                                {\r\n                                    label: '# Activities per hour',\r\n                                    data: this.entityHoursActValues,\r\n                                    backgroundColor: [\r\n                                        'rgba(255, 99, 132, 0.2)'\r\n                                    ],\r\n                                    borderColor: ['rgba(255,99,132,1)'],\r\n                                    borderWidth: 1\r\n                                }\r\n                            ]\r\n                        },\r\n                        options: {\r\n                            scales: {\r\n                                yAxes: [\r\n                                    {\r\n                                        ticks: {\r\n                                            beginAtZero: true\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    });\r\n                    this.entityService\r\n                        .getEntityStatisticsUsers(this.entityId)\r\n                        .subscribe(users => {\r\n                            this.totalUser = users.nRegisteredUsers;\r\n                            // console.log('que tinc a Total Users', this.totalUser);\r\n                        });\r\n                });\r\n        });\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"content-panel\\\">\\r\\n    <div class=\\\"infoDialog\\\" *ngIf=\\\"data.mode === 'infoDialog'\\\" style=\\\"text-align: center\\\">\\r\\n        <div class=\\\"content-panel\\\">\\r\\n            <div class=\\\"ui icon header\\\">\\r\\n                <i class=\\\"exclamation icon\\\"></i>\\r\\n                Error Message:\\r\\n            </div>\\r\\n            <div class=\\\"content\\\">\\r\\n                {{ data.obj }}\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Dialog title-->\\r\\n<div *ngIf=\\\"data.mode === 'addActivity' || data.mode === 'editActivity' || data.mode === 'deleteActivity' || data.mode === 'editUserInfo'\\\">\\r\\n    <h1 *ngIf=\\\"data.mode === 'addActivity'\\\">Add activity:</h1>\\r\\n    <h1 *ngIf=\\\"data.mode === 'editActivity'\\\">Edit activity:</h1>\\r\\n    <h1 *ngIf=\\\"data.mode === 'deleteActivity'\\\">Delete activity:</h1>\\r\\n    <h1 *ngIf=\\\"data.mode === 'editUserInfo'\\\">Edit User Information:</h1>\\r\\n    <div class=\\\"ui divider\\\"></div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"data.mode === 'addActivity' || data.mode === 'editActivity' || data.mode\\\">\\r\\n    <div class=\\\"ui form\\\">\\r\\n        <form [formGroup]=\\\"activityForm\\\" *ngIf=\\\"data.mode === 'addActivity' || data.mode === 'editActivity'\\\">\\r\\n            <div class=\\\"field\\\">\\r\\n                <div class=\\\"one fields\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Title:\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"title\\\">\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('title').invalid && activityForm.get('title').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Must be > 3</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"four fields\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Start Date:\\r\\n                            <mat-form-field style=\\\"width: 120px;\\\">\\r\\n                                <input matInput [matDatepicker]=\\\"picker\\\" (dateInput)=\\\"addDate('start', $event)\\\"\\r\\n                                    formControlName=\\\"dateStart\\\">\\r\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                                <mat-datepicker #picker></mat-datepicker>\\r\\n                            </mat-form-field>\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('dateStart').invalid && activityForm.get('dateStart').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Start Time:\\r\\n                        </label>\\r\\n                        <div class=\\\"ui input left icon\\\" style=\\\"padding-top: 12px\\\">\\r\\n                            <i class=\\\"time icon\\\"></i>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Time\\\" formControlName=\\\"timeStart\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('timeStart').invalid && activityForm.get('timeStart').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            End Date:\\r\\n                            <mat-form-field style=\\\"width: 120px;\\\">\\r\\n                                <input matInput [matDatepicker]=\\\"picker2\\\" (dateInput)=\\\"addDate('end', $event)\\\"\\r\\n                                    formControlName=\\\"dateEnd\\\">\\r\\n                                <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                                <mat-datepicker #picker2></mat-datepicker>\\r\\n                            </mat-form-field>\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('dateEnd').invalid && activityForm.get('dateEnd').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            End Time:\\r\\n                        </label>\\r\\n                        <div class=\\\"ui input left icon\\\" style=\\\"padding-top: 12px\\\">\\r\\n                            <i class=\\\"time icon\\\"></i>\\r\\n                            <input type=\\\"text\\\" placeholder=\\\"Time\\\" formControlName=\\\"timeEnd\\\">\\r\\n                        </div>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('timeEnd').invalid && activityForm.get('timeEnd').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"field\\\">\\r\\n                <div class=\\\"fields\\\">\\r\\n                    <div class=\\\"four wide field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Latitude:\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"lat\\\">\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('lat').invalid && activityForm.get('lat').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"four wide field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Longitude:\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"long\\\">\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('long').invalid && activityForm.get('long').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"eight wide field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Address:\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"address\\\">\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('address').invalid && activityForm.get('address').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"field\\\">\\r\\n                <div class=\\\"four fields\\\">\\r\\n                    <div class=\\\"field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Activity type:\\r\\n                            <select class=\\\"ui search dropdown\\\" formControlName=\\\"activityType\\\">\\r\\n                                <option value=\\\"EN\\\">Entity</option>\\r\\n                                <option value=\\\"AL\\\">Alabama</option>\\r\\n                            </select>\\r\\n                            <!-- <input type=\\\"text\\\" formControlName=\\\"activityType\\\"> -->\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('activityType').invalid && activityForm.get('activityType').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Price:\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"price\\\">\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('price').invalid && activityForm.get('price').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Rating:\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"rating\\\">\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('rating').invalid && activityForm.get('rating').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"field\\\">\\r\\n                        <label style=\\\"text-align: left\\\">\\r\\n                            Capacity:\\r\\n                            <input type=\\\"text\\\" formControlName=\\\"capacity\\\">\\r\\n                        </label>\\r\\n                        <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('capacity').invalid && activityForm.get('capacity').touched\\\"\\r\\n                            style=\\\"text-align: center\\\">\\r\\n                            <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                                <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"field\\\">\\r\\n                <label style=\\\"text-align: left\\\">\\r\\n                    Desciption:\\r\\n                    <textarea rows=\\\"3\\\" formControlName=\\\"description\\\"></textarea>\\r\\n                </label>\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"activityForm.get('description').invalid && activityForm.get('description').touched\\\"\\r\\n                    style=\\\"text-align: center\\\">\\r\\n                    <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                        <p style=\\\"color: red; white-space: nowrap;\\\">Can't be empty!</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <label style=\\\"text-align: left\\\"> Images: </label>\\r\\n            <div class=\\\"two fields\\\">\\r\\n                <div class=\\\"field\\\">\\r\\n                    <input #imageInput type=\\\"file\\\" (change)=\\\"onFileSelected($event)\\\" accept=\\\"image/x-png,image/gif,image/jpeg\\\">\\r\\n                </div>\\r\\n                <div class=\\\"field\\\">\\r\\n                    <button class=\\\"ui blue basic button\\\" (click)=\\\"onUpload()\\\"> Upload </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"data.mode === 'editUserInfo'\\\">\\r\\n    <div class=\\\"ui form\\\">\\r\\n        <form [formGroup]=\\\"userInfoForm\\\" *ngIf=\\\"data.mode === 'editUserInfo'\\\">\\r\\n            <div class=\\\"field\\\">\\r\\n                <label style=\\\"text-align: left\\\">\\r\\n                    Email:\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"email\\\">\\r\\n                </label>\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"userInfoForm.get('email').invalid && userInfoForm.get('email').touched\\\"\\r\\n                    style=\\\"text-align: center\\\">\\r\\n                    <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                        <p style=\\\"color: red; white-space: nowrap;\\\">Must be at least 3 characters!</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"field\\\">\\r\\n                <label style=\\\"text-align: left\\\">\\r\\n                    Complete Name:\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"completeName\\\">\\r\\n                </label>\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"userInfoForm.get('completeName').invalid && userInfoForm.get('completeName').touched\\\"\\r\\n                    style=\\\"text-align: center\\\">\\r\\n                    <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                        <p style=\\\"color: red; white-space: nowrap;\\\">Must be at least 3 characters!</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"field\\\">\\r\\n                <label style=\\\"text-align: left\\\">\\r\\n                    Birthday:\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"birthday\\\">\\r\\n                </label>\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"userInfoForm.get('birthday').invalid && userInfoForm.get('birthday').touched\\\"\\r\\n                    style=\\\"text-align: center\\\">\\r\\n                    <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                        <p style=\\\"color: red; white-space: nowrap;\\\">Must be at least 3 characters!</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"field\\\">\\r\\n                <label style=\\\"text-align: left\\\">\\r\\n                    Phone:\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"phone\\\">\\r\\n                </label>\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"userInfoForm.get('phone').invalid && userInfoForm.get('phone').touched\\\"\\r\\n                    style=\\\"text-align: center\\\">\\r\\n                    <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                        <p style=\\\"color: red; white-space: nowrap;\\\">Must be at least 3 characters!</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"data.mode === 'deleteActivity'\\\">\\r\\n    <p>Are you sure to delete : <span style=\\\"color: red\\\"> {{ activityToDelete.title }}</span></p>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <div class=\\\"ui divider\\\"></div>\\r\\n</div>\\r\\n\\r\\n<!--Add & Edit Actions-->\\r\\n<div class=\\\"actions\\\" *ngIf=\\\"data.mode === 'addActivity' || data.mode === 'editActivity' || data.mode === 'editUserInfo'\\\"\\r\\n    style=\\\"text-align: center; padding-top: 10px;\\\">\\r\\n    <div class=\\\"ui green basic ok button\\\" (click)=\\\"onSaveClick(data)\\\">\\r\\n        <i class=\\\"checkmark icon\\\"></i>\\r\\n        Save\\r\\n    </div>\\r\\n    <div class=\\\"ui red basic cancel button\\\" (click)=\\\"onCancelClick()\\\">\\r\\n        <i class=\\\"remove icon\\\"></i>\\r\\n        Cancel\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!--Delete Actions-->\\r\\n<div class=\\\"actions\\\" *ngIf=\\\"data.mode === 'deleteActivity'\\\" style=\\\"text-align: center; padding-top: 10px;\\\">\\r\\n    <div class=\\\"ui green basic ok button\\\" (click)=\\\"onDeleteClick(data)\\\">\\r\\n        <i class=\\\"checkmark icon\\\"></i>\\r\\n        Yes\\r\\n    </div>\\r\\n    <div class=\\\"ui red basic cancel button\\\" (click)=\\\"onCancelClick()\\\">\\r\\n        <i class=\\\"remove icon\\\"></i>\\r\\n        No\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","module.exports = \"\"","import {\r\n    Component,\r\n    Inject,\r\n    OnInit,\r\n    OnDestroy,\r\n    ElementRef\r\n} from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport {\r\n    FormGroup,\r\n    FormControl,\r\n    Validators\r\n} from '../../../../node_modules/@angular/forms';\r\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\r\nimport { Subscription } from 'rxjs';\r\nimport { DialogService } from '../../services/dialog/dialog.service';\r\nimport { ActivitiesService } from '../../services/activities/activities.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Activity } from '../../models/activity';\r\nimport { MessagesService } from '../../services/messages/messages.service';\r\nimport { UserService } from '../../services/user/user.service';\r\nimport { UploadImagesService } from 'src/app/services/upload/upload-images.service';\r\n\r\nimport { Ng2ImgMaxService } from 'ng2-img-max';\r\nimport { ViewChild } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n// 为了在dialog-content能够acces\r\nexport interface DialogData {\r\n    mode: string;\r\n    obj: any;\r\n    form: any;\r\n}\r\n\r\n@Component({\r\n    selector: 'app-dialog',\r\n    templateUrl: './dialog.component.html',\r\n    styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogComponent implements OnInit, OnDestroy {\r\n    subscriptions: Array<Subscription> = []; // 为了推出component的时候取消订阅，要不然再次进来的时候回再次订阅就会变成订阅两次\r\n\r\n    activityForm = new FormGroup({\r\n        title: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(3)\r\n        ]),\r\n        description: new FormControl('', Validators.required),\r\n        dateStart: new FormControl('', Validators.required),\r\n        dateEnd: new FormControl('', Validators.required),\r\n        timeStart: new FormControl('', Validators.required),\r\n        timeEnd: new FormControl('', Validators.required),\r\n        images: new FormControl('', Validators.required),\r\n        lat: new FormControl('', [\r\n            Validators.required,\r\n            Validators.pattern('^[0-9]*$')\r\n        ]),\r\n        long: new FormControl('', [\r\n            Validators.required,\r\n            Validators.pattern('^[0-9]*$')\r\n        ]),\r\n        address: new FormControl('', Validators.required),\r\n        activityType: new FormControl('', Validators.required),\r\n        price: new FormControl('', [\r\n            Validators.required,\r\n            Validators.pattern('^[0-9]*$')\r\n        ]),\r\n        rating: new FormControl('', [\r\n            Validators.required,\r\n            Validators.pattern('^[0-9]*$')\r\n        ]),\r\n        capacity: new FormControl('', [\r\n            Validators.required,\r\n            Validators.pattern('^[0-9]*$')\r\n        ])\r\n    });\r\n\r\n    userInfoForm = new FormGroup({\r\n        email: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(3)\r\n        ]),\r\n        completeName: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(3)\r\n        ]),\r\n        birthday: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(3)\r\n        ]),\r\n        phone: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(3)\r\n        ])\r\n    });\r\n\r\n    constructor(\r\n        public dialog: MatDialog,\r\n        private dialogService: DialogService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.subscriptions.push(\r\n            this.dialogService.dialog$.subscribe(mode => {\r\n                // mode （从HTML传过来的）传过来的时候是个obj {mode: 他的action类别, obj: optional的，可以选择传过来任何一个obj如果需要的话}\r\n                if (mode.mode === 'addActivity') {\r\n                    this.openDialog(mode);\r\n                }\r\n                if (mode.mode === 'editActivity') {\r\n                    this.activityForm.setValue({\r\n                        title:\r\n                            mode.obj.title === undefined ? '' : mode.obj.title,\r\n                        description:\r\n                            mode.obj.description === undefined\r\n                                ? ''\r\n                                : mode.obj.description,\r\n                        dateStart: '',\r\n                        dateEnd: '',\r\n                        timeStart: '',\r\n                        timeEnd: '',\r\n                        images:\r\n                            mode.obj.images === undefined\r\n                                ? ''\r\n                                : mode.obj.images,\r\n                        lat: mode.obj.lat === undefined ? '' : mode.obj.lat,\r\n                        long: mode.obj.long === undefined ? '' : mode.obj.long,\r\n                        address:\r\n                            mode.obj.address === undefined\r\n                                ? ''\r\n                                : mode.obj.address,\r\n                        activityType:\r\n                            mode.obj.activityType === undefined\r\n                                ? ''\r\n                                : mode.obj.activityType,\r\n                        price:\r\n                            mode.obj.price === undefined ? '' : mode.obj.price,\r\n                        rating:\r\n                            mode.obj.rating === undefined\r\n                                ? ''\r\n                                : mode.obj.rating,\r\n                        capacity:\r\n                            mode.obj.capacity === undefined\r\n                                ? ''\r\n                                : mode.obj.capacity\r\n                    });\r\n                    this.openDialog(mode);\r\n                }\r\n                if (mode.mode === 'deleteActivity') {\r\n                    this.openDialog(mode);\r\n                }\r\n                if (mode.mode === 'infoDialog') {\r\n                    this.openDialog(mode);\r\n                }\r\n                if (mode.mode === 'editUserInfo') {\r\n                    console.log('USERINFO: ', mode.obj);\r\n                    this.userInfoForm.setValue({\r\n                        email:\r\n                            mode.obj.email === undefined ? '' : mode.obj.email,\r\n                        completeName:\r\n                            mode.obj.completeName === undefined\r\n                                ? ''\r\n                                : mode.obj.completeName,\r\n                        birthday:\r\n                            mode.obj.birthday === undefined\r\n                                ? ''\r\n                                : mode.obj.birthday,\r\n                        phone:\r\n                            mode.obj.phone === undefined ? '' : mode.obj.phone\r\n                    });\r\n                    this.openDialog(mode);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    openDialog(mode): void {\r\n        // ----------------------------------------------\r\n        // -----------to make auto complete--------------\r\n        // ----------------------------------------------\r\n        if (mode.mode === 'editUserInfo') {\r\n            const dialogRef = this.dialog.open(DialogContentComponent, {\r\n                width: '600px',\r\n                // 这里有一个form 是为了打开dialog之后立马能加载里面的内容\r\n                data: {\r\n                    mode: mode.mode,\r\n                    obj: mode.obj,\r\n                    form: this.userInfoForm\r\n                } // dialog-content 可以通过data来读取dialog.component里面的变量\r\n            });\r\n            dialogRef.afterClosed().subscribe(result => {\r\n                //\r\n            });\r\n        } else {\r\n            const dialogRef = this.dialog.open(DialogContentComponent, {\r\n                width: '600px',\r\n                // 这里有一个form 是为了打开dialog之后立马能加载里面的内容\r\n                data: {\r\n                    mode: mode.mode,\r\n                    obj: mode.obj,\r\n                    form: this.activityForm\r\n                } // dialog-content 可以通过data来读取dialog.component里面的变量\r\n            });\r\n            dialogRef.afterClosed().subscribe(result => {\r\n                //\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n}\r\n\r\n@Component({\r\n    selector: 'app-dialog-content',\r\n    templateUrl: './dialog-content.html'\r\n})\r\nexport class DialogContentComponent implements OnInit {\r\n    @ViewChild('imageInput') imageInputVariable: ElementRef;\r\n\r\n    base64textString;\r\n    uploadedImage: File;\r\n    imageUrl;\r\n    activityToDelete;\r\n    activityForm = new FormGroup({});\r\n    userInfoForm = new FormGroup({});\r\n    startDate;\r\n    endDate;\r\n    timeStart;\r\n    timeEnd;\r\n\r\n    ngOnInit() {}\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<DialogContentComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n        private http: HttpClient,\r\n        private activityService: ActivitiesService,\r\n        private messagesService: MessagesService,\r\n        private dialogService: DialogService,\r\n        private uploadImagesService: UploadImagesService,\r\n        private ng2ImgMax: Ng2ImgMaxService,\r\n        private userService: UserService\r\n    ) {\r\n        this.activityToDelete = this.data.obj;\r\n        // ----------------------------------------------\r\n        // -----------to make auto complete--------------\r\n        // ----------------------------------------------\r\n        if (data.mode === 'editActivity') {\r\n            this.activityForm = data.form;\r\n        } else if (data.mode === 'editUserInfo') {\r\n            this.userInfoForm = data.form;\r\n        } else {\r\n            this.activityForm = new FormGroup({\r\n                title: new FormControl('', [\r\n                    Validators.required,\r\n                    Validators.minLength(3)\r\n                ]),\r\n                description: new FormControl('', Validators.required),\r\n                dateStart: new FormControl('', Validators.required),\r\n                dateEnd: new FormControl('', Validators.required),\r\n                timeStart: new FormControl('', Validators.required),\r\n                timeEnd: new FormControl('', Validators.required),\r\n                images: new FormControl('', Validators.required),\r\n                lat: new FormControl('', Validators.required),\r\n                long: new FormControl('', Validators.required),\r\n                address: new FormControl('', Validators.required),\r\n                activityType: new FormControl('', Validators.required),\r\n                price: new FormControl('', Validators.required),\r\n                rating: new FormControl('', Validators.required),\r\n                capacity: new FormControl('', Validators.required)\r\n            });\r\n        }\r\n    }\r\n\r\n    onFileSelected(event) {\r\n        const file = event.target.files[0];\r\n        // Compress the image to 0.75MB\r\n        this.ng2ImgMax.compressImage(file, 0.075).subscribe(\r\n            result => {\r\n                this.uploadedImage = new File([result], result.name);\r\n                console.log('imageCompressed', this.uploadedImage);\r\n                const reader = new FileReader();\r\n                reader.onload = this._handleReaderLoaded.bind(this);\r\n                reader.readAsBinaryString(this.uploadedImage);\r\n            },\r\n            error => {\r\n                // console.log('Oh no!', error);\r\n                this.dialogService.openDialog({\r\n                    mode: 'infoDialog',\r\n                    obj: error.reason + ' Please try with another image!'\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    _handleReaderLoaded(readerEvt) {\r\n        const binaryString = readerEvt.target.result;\r\n        this.base64textString = btoa(binaryString);\r\n        console.log(btoa(binaryString));\r\n    }\r\n\r\n    onUpload() {\r\n        this.uploadImagesService\r\n            .upload(this.base64textString)\r\n            .subscribe(res => {\r\n                if (this.messagesService.getExists()) {\r\n                    this.dialogService.openDialog({\r\n                        mode: 'infoDialog',\r\n                        obj: this.messagesService.getMessage()\r\n                    });\r\n                    this.messagesService.setMessage(null);\r\n                } else {\r\n                    this.imageUrl = res.imageUrl;\r\n                    // this.snackBarService.openSnackBar({message: 'Added successful!', action: 'Ok'});\r\n                }\r\n            });\r\n    }\r\n\r\n    onCancelClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n    onSaveClick(data): void {\r\n        const title = this.activityForm.value.title;\r\n        const description = this.activityForm.value.description;\r\n        const lat = this.activityForm.value.lat;\r\n        const long = this.activityForm.value.long;\r\n        const images = this.imageUrl;\r\n        const participants = [];\r\n        const address = this.activityForm.value.address;\r\n        const activityType = this.activityForm.value.activityType;\r\n        const price = this.activityForm.value.price;\r\n        const rating = this.activityForm.value.rating;\r\n        const capacity = this.activityForm.value.capacity;\r\n        const email = this.userInfoForm.value.email;\r\n        const completeName = this.userInfoForm.value.completeName;\r\n        const birthday = this.userInfoForm.value.birthday;\r\n        const phone = this.userInfoForm.value.phone;\r\n\r\n        if (data.mode === 'addActivity') {\r\n            this.timeEnd = this.activityForm.value.timeEnd; // get start time from form\r\n            this.timeStart = this.activityForm.value.timeStart; // get end time from form\r\n            const start = `${this.startDate} ${this.timeStart}`; // get the start time in mm/dd/yyyy hh:mm in String\r\n            const end = `${this.endDate} ${this.timeEnd}`; // get the end time in mm/dd/yyyy hh:mm in String\r\n            const startMoment = moment(start); // create the moment()\r\n            const endMoment = moment(end);\r\n            const timestampStart = startMoment.toDate().getTime() / 1000 + ''; // transform the moment to date and the date to timestamp\r\n            const timestampEnd = endMoment.toDate().getTime() / 1000 + '';\r\n\r\n            this.activityService\r\n                .addActivitiy({\r\n                    title: title,\r\n                    description: description,\r\n                    timestampStart: timestampStart,\r\n                    timestampEnd: timestampEnd,\r\n                    lat: lat,\r\n                    long: long,\r\n                    images: images,\r\n                    participants: participants,\r\n                    address: address,\r\n                    activityType: activityType,\r\n                    price: price,\r\n                    rating: rating,\r\n                    capacity: capacity\r\n                })\r\n                .subscribe(res => {\r\n                    if (this.messagesService.getExists()) {\r\n                        console.log(\r\n                            'error: ',\r\n                            this.messagesService.getMessage()\r\n                        );\r\n                        this.dialogService.openDialog({\r\n                            mode: 'infoDialog',\r\n                            obj: this.messagesService.getMessage()\r\n                        });\r\n                        this.messagesService.setMessage(null);\r\n                    } else {\r\n                        this.activityService.actDataChanged('changed');\r\n                        // this.snackBarService.openSnackBar({message: 'Added successful!', action: 'Ok'});\r\n                        this.onCancelClick();\r\n                    }\r\n                });\r\n            this.dialogRef.close();\r\n        }\r\n        if (data.mode === 'editActivity') {\r\n            const idAct = data.obj.id;\r\n            this.timeEnd = this.activityForm.value.timeEnd; // get start time from form\r\n            this.timeStart = this.activityForm.value.timeStart; // get end time from form\r\n            const start = `${this.startDate} ${this.timeStart}`; // get the start time in mm/dd/yyyy hh:mm in String\r\n            const end = `${this.endDate} ${this.timeEnd}`; // get the end time in mm/dd/yyyy hh:mm in String\r\n            const startMoment = moment(start); // create the moment()\r\n            const endMoment = moment(end);\r\n            const timestampStart = startMoment.toDate().getTime() / 1000 + ''; // transform the moment to date and the date to timestamp\r\n            const timestampEnd = endMoment.toDate().getTime() / 1000 + '';\r\n            this.activityService\r\n                .editActivity({\r\n                    id: idAct,\r\n                    title: title,\r\n                    description: description,\r\n                    timestampStart: timestampStart,\r\n                    timestampEnd: timestampEnd,\r\n                    lat: lat,\r\n                    long: long,\r\n                    images: images,\r\n                    participants: participants,\r\n                    address: address,\r\n                    activityType: activityType,\r\n                    price: price,\r\n                    rating: rating,\r\n                    capacity: capacity\r\n                })\r\n                .subscribe(res => {\r\n                    if (this.messagesService.getExists()) {\r\n                        this.dialogService.openDialog({\r\n                            mode: 'infoDialog',\r\n                            obj: this.messagesService.getMessage()\r\n                        });\r\n                        this.messagesService.setMessage(null);\r\n                    } else {\r\n                        this.activityService.actDataChanged('changed');\r\n                        // this.snackBarService.openSnackBar({message: 'Added successful!', action: 'Ok'});\r\n                        this.onCancelClick();\r\n                    }\r\n                });\r\n            this.dialogRef.close();\r\n        }\r\n        if (data.mode === 'editUserInfo') {\r\n            const idUser = data.obj._id;\r\n            this.userService\r\n                .updateUserInfo(\r\n                    {\r\n                        email: email,\r\n                        completeName: completeName,\r\n                        birthday: birthday,\r\n                        phone: phone\r\n                    },\r\n                    idUser\r\n                )\r\n                .subscribe(res => {\r\n                    if (this.messagesService.getExists()) {\r\n                        this.dialogService.openDialog({\r\n                            mode: 'infoDialog',\r\n                            obj: this.messagesService.getMessage()\r\n                        });\r\n                        this.messagesService.setMessage(null);\r\n                    } else {\r\n                        // this.activityService.actDataChanged('changed');\r\n                        // this.snackBarService.openSnackBar({message: 'Added successful!', action: 'Ok'});\r\n                        this.onCancelClick();\r\n                    }\r\n                });\r\n            this.dialogRef.close();\r\n        }\r\n    }\r\n\r\n    // 从Date格式转换到Timestamp为了能够储存到DB里面\r\n    addDate(type: string, event: MatDatepickerInputEvent<Date>) {\r\n        const startDate = this.activityForm.value.dateStart;\r\n        const endDate = this.activityForm.value.dateEnd;\r\n\r\n        if (type === 'start') {\r\n            const year = startDate.getFullYear();\r\n            let month = startDate.getMonth();\r\n            month = month + 1;\r\n            const day = startDate.getDate();\r\n            const dateString = `${month}/${day}/${year}`;\r\n            // this.endDate is the String mm/dd/yyyy\r\n            this.startDate = dateString;\r\n        }\r\n        if (type === 'end') {\r\n            const year = endDate.getFullYear();\r\n            let month = endDate.getMonth();\r\n            month = month + 1;\r\n            const day = endDate.getDate();\r\n            const dateString = `${month}/${day}/${year}`;\r\n            // this.endDate is the String mm/dd/yyyy\r\n            this.endDate = dateString;\r\n        }\r\n    }\r\n\r\n    onDeleteClick(data) {\r\n        if (data.mode === 'deleteActivity') {\r\n            console.log(data);\r\n            this.activityService.deleteActivity(data.obj.id).subscribe(res => {\r\n                if (this.messagesService.getExists()) {\r\n                    this.dialogService.openDialog({\r\n                        mode: 'infoDialog',\r\n                        obj: this.messagesService.getMessage()\r\n                    });\r\n                    this.messagesService.setMessage(null);\r\n                } else {\r\n                    this.activityService.actDataChanged('changed');\r\n                    // this.snackBarService.openSnackBar({message: 'Added successful!', action: 'Ok'});\r\n                    this.onCancelClick();\r\n                }\r\n                this.dialogRef.close();\r\n            });\r\n        }\r\n    }\r\n}\r\n","module.exports = \".login-page {\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n    outline: 2px solid #C0C0C0;\\r\\n    outline-offset: 20px;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    text-align: center;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"login-page\\\">\\r\\n    <app-dialog></app-dialog>\\r\\n    <h1 class=\\\"title\\\">Login</h1>\\r\\n    <div class=\\\"form\\\" style=\\\"width: 210px;\\\">\\r\\n        <form [formGroup]=\\\"loginForm\\\">\\r\\n            <div class=\\\"field\\\">\\r\\n                <strong>Username:</strong>\\r\\n                <div class=\\\"ui input\\\">\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" style=\\\"width: 210px;\\\">\\r\\n                </div>\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('username').invalid && loginForm.get('username').touched\\\"\\r\\n                    style=\\\"text-align: center\\\">\\r\\n                    <div class=\\\"input-err-message\\\" style=\\\"text-align: center\\\">\\r\\n                        <p style=\\\"color: red; white-space: nowrap;\\\">Wrong username format!</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"field\\\" style=\\\"margin-top: 15px\\\">\\r\\n                <strong>Password:</strong>\\r\\n                <div class=\\\"ui input\\\">\\r\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" style=\\\"width: 210px;\\\">\\r\\n                </div>\\r\\n                <div class=\\\"error-message\\\" *ngIf=\\\"loginForm.get('password').invalid && loginForm.get('password').touched\\\"\\r\\n                    style=\\\"text-align: center\\\">\\r\\n                    <p style=\\\"color: red; white-space: nowrap;\\\">3 or more characters!</p>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"login-button\\\" style=\\\"margin-top: 20px;\\\">\\r\\n                <button class=\\\"ui fluid blue button\\\" (click)=\\\"login()\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n    FormGroup,\r\n    FormControl,\r\n    Validators\r\n} from '../../../../node_modules/@angular/forms';\r\nimport { DialogService } from '../../services/dialog/dialog.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth/auth.service';\r\nimport { MessagesService } from '../../services/messages/messages.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    loginForm = new FormGroup({\r\n        username: new FormControl('', [Validators.required]),\r\n        password: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(3)\r\n        ])\r\n    });\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router,\r\n        private messageService: MessagesService,\r\n        private dialogService: DialogService\r\n    ) {}\r\n\r\n    ngOnInit() {}\r\n\r\n    login() {\r\n        let username = this.loginForm.value.username;\r\n        let password = this.loginForm.value.password;\r\n        username = username.trim();\r\n        if (!username) {\r\n            return;\r\n        }\r\n        password = password.trim();\r\n        if (!password) {\r\n            return;\r\n        }\r\n        this.authService\r\n            .login({ username: username, password: password })\r\n            .subscribe(user => {\r\n                // console.log('auth response', user);\r\n                // if (this.messageService.getExists()) {\r\n                //     this.dialogService.openDialog({\r\n                //         mode: 'infoDialog',\r\n                //         obj: this.messageService.getMessage()\r\n                //     });\r\n                //     this.messageService.setMessage(null);\r\n                // } else {\r\n                //     localStorage.setItem('token', user.token);\r\n                //     localStorage.setItem('username', username);\r\n                //     // 呼叫userService的方法，让订阅者们收到新的值\r\n                //     this.authService.changeUserStatus('loginSuccess');\r\n                //     this.router.navigate(['/dashboard']);\r\n                // }\r\n                localStorage.setItem('token', user.token);\r\n                localStorage.setItem('username', username);\r\n                // 呼叫userService的方法，让订阅者们收到新的值\r\n                this.authService.changeUserStatus('loginSuccess');\r\n                this.router.navigate(['/dashboard']);\r\n            });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"ui secondary vertical pointing menu\\\">\\r\\n    <div class='title'>\\r\\n    </div>\\r\\n    <a class=\\\"item\\\" routerLink=\\\"/dashboard\\\">\\r\\n        Dashboard\\r\\n    </a>\\r\\n    <a class=\\\"item\\\" routerLink=\\\"/activities\\\">\\r\\n        Activitats Entitats Publiques\\r\\n    </a>\\r\\n    <a class=\\\"item\\\" routerLink=\\\"/userActivities\\\">\\r\\n        Activitats Usuari\\r\\n    </a>\\r\\n    <a class=\\\"item\\\" routerLink=\\\"/users\\\">\\r\\n        Users\\r\\n    </a>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-side-bar',\r\n    templateUrl: './side-bar.component.html',\r\n    styleUrls: ['./side-bar.component.css']\r\n})\r\nexport class SideBarComponent implements OnInit {\r\n    constructor() {}\r\n\r\n    ngOnInit() {}\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"top-bar-content\\\">\\r\\n    <div class=\\\"left items\\\">\\r\\n        <div class=\\\"sidebar button\\\">\\r\\n            <button class=\\\"ui labeled icon button\\\" (click)=\\\"toggle()\\\">\\r\\n                <i class=\\\"sidebar icon\\\"></i>Menu\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"right items\\\">\\r\\n        <div *ngIf=\\\"logged\\\">\\r\\n            <div class=\\\"profile\\\" style=\\\"position: absolute; right: 125px; top: 6px\\\">\\r\\n                <a class=\\\"ui label\\\" routerLink=\\\"/userinfo\\\">\\r\\n                    <img class=\\\"ui right spaced avatar image\\\" src=\\\"/src/assets/image/boy.jpg\\\">\\r\\n                    {{ username }}\\r\\n                </a>\\r\\n            </div>\\r\\n            <div class=\\\"logout\\\" style=\\\"position: absolute; right: 5px; top: 6px\\\">\\r\\n                <button class=\\\"ui red button\\\" style=\\\"height: 39.5px; background-color: red\\\" (click)=\\\"logout()\\\">\\r\\n                    <i class=\\\"sign-out icon\\\"></i>\\r\\n                    Log out\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SidebarService } from '../../services/sidebar/sidebar.service';\r\nimport { AuthService } from 'src/app/services/auth/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-top-bar',\r\n    templateUrl: './top-bar.component.html',\r\n    styleUrls: ['./top-bar.component.css']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n    logged = localStorage.getItem('token');\r\n    username = localStorage.getItem('username');\r\n\r\n    sidebarOpened = false;\r\n    constructor(\r\n        private sidebarService: SidebarService,\r\n        private authService: AuthService\r\n    ) {}\r\n\r\n    logout() {\r\n        this.authService.logout();\r\n        this.logged = null;\r\n    }\r\n\r\n    ngOnInit() {\r\n        // 可以从任何组件来订阅user$，来获取改变的值\r\n        this.authService.user$.subscribe(r => {\r\n            if (r === 'loginSuccess') {\r\n                this.logged = localStorage.getItem('token');\r\n                this.username = localStorage.getItem('username');\r\n            }\r\n        });\r\n    }\r\n\r\n    toggle() {\r\n        if (this.sidebarOpened) {\r\n            this.sidebarService.changeSidebarStatus('close');\r\n            this.sidebarOpened = false;\r\n        } else {\r\n            this.sidebarService.changeSidebarStatus('open');\r\n            this.sidebarOpened = true;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"userActivities-content\\\">\\r\\n    <h1>User Activities list</h1>\\r\\n    <div class=\\\"ui divider\\\"></div>\\r\\n    <div class=\\\"top-controls\\\" style=\\\"text-align: right; padding: 20px\\\">\\r\\n        Table size:\\r\\n        <select class=\\\"ui dropdown\\\" (change)=\\\"setPageSize($event)\\\">\\r\\n            <option value=\\\"4\\\">4</option>\\r\\n            <option value=\\\"6\\\">6</option>\\r\\n            <option value=\\\"8\\\">8</option>\\r\\n            <option selected=\\\"selected\\\">10</option>\\r\\n        </select>\\r\\n        <button class=\\\"ui labeled icon button\\\" (click)=\\\"openModal({mode: 'addActivity', obj: null})\\\" style=\\\"margin-left: 50px;\\\">\\r\\n            <i class=\\\"add icon\\\"></i>\\r\\n            Add\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"table-content\\\">\\r\\n        <table class=\\\"ui celled table\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th>Name</th>\\r\\n                    <th>Decription</th>\\r\\n                    <th>Start date</th>\\r\\n                    <th>End date</th>\\r\\n                    <th>Latitude</th>\\r\\n                    <th>Longitude</th>\\r\\n                    <th>Participants</th>\\r\\n                    <th>Image</th>\\r\\n                    <th></th>\\r\\n                    <th></th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor='let activity of userActivities'>\\r\\n                    <td>{{ activity.name }}</td>\\r\\n                    <td>{{ activity.description }}</td>\\r\\n                    <td>{{ activity.startDate }}</td>\\r\\n                    <td>{{ activity.endDate }}</td>\\r\\n                    <td>{{ activity.lat }}</td>\\r\\n                    <td>{{ activity.lng }}</td>\\r\\n                    <td>\\r\\n                        <ul *ngFor=\\\"let p of activity.participants\\\">\\r\\n                            <li><span style=\\\"color: red\\\">ID: </span>{{p.id}}</li>\\r\\n                            <li><span style=\\\"color: red\\\">Name: </span>{{p.name}}</li>\\r\\n                        </ul>\\r\\n                    </td>\\r\\n                    <td>{{ activity.image }}</td>\\r\\n                    <td style=\\\"text-align: center\\\"><button class=\\\"ui icon button\\\" (click)=\\\"openModal({mode: 'deleteActivity', obj: activity})\\\">\\r\\n                            <i class=\\\"trash icon\\\"></i>\\r\\n                        </button></td>\\r\\n                    <td style=\\\"text-align: center\\\"><button class=\\\"ui icon button\\\" (click)=\\\"openModal({mode: 'editActivity', obj: activity})\\\">\\r\\n                            <i class=\\\"edit icon\\\"></i>\\r\\n                        </button></td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n                <tr>\\r\\n                    <th colspan=\\\"10\\\">\\r\\n                        <app-dialog></app-dialog>\\r\\n                        <div class=\\\"ui right floated pagination menu\\\">\\r\\n                            <a class=\\\"icon item\\\">\\r\\n                                <i class=\\\"left chevron icon\\\"></i>\\r\\n                            </a>\\r\\n                            <a class=\\\"item\\\" *ngFor=\\\"let loop of loopTimes\\\" (click)=\\\"getGamesPara(loop + 1)\\\">{{loop +\\r\\n                                1}}</a>\\r\\n                            <a class=\\\"icon item\\\">\\r\\n                                <i class=\\\"right chevron icon\\\"></i>\\r\\n                            </a>\\r\\n                        </div>\\r\\n                    </th>\\r\\n                </tr>\\r\\n            </tfoot>\\r\\n        </table>\\r\\n        <!--app-snack-bar></app-snack-bar-->\\r\\n        <div class=\\\"ui center aligned basic segment\\\">\\r\\n            <button class=\\\"ui centered aligned button\\\" (click)=\\\"goBack()\\\">Back</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DialogService } from '../../services/dialog/dialog.service';\r\nimport { ActivitiesService } from '../../services/activities/activities.service';\r\n\r\n@Component({\r\n    selector: 'app-user-activities',\r\n    templateUrl: './user-activities.component.html',\r\n    styleUrls: ['./user-activities.component.css']\r\n})\r\nexport class UserActivitiesComponent implements OnInit {\r\n    actURL = 'https://grandapp.herokuapp.com/activities';\r\n    userActivities = [];\r\n\r\n    constructor(\r\n        private dialogService: DialogService,\r\n        private activitiesService: ActivitiesService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        // this.userActivities = this.activitiesService.getActivities();\r\n    }\r\n\r\n    openModal(mode) {\r\n        this.dialogService.openDialog(mode);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"userInfo\\\">\\r\\n    <h1>User Information:</h1>\\r\\n    <table class=\\\"ui definition table\\\">\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td class=\\\"two wide column\\\"></td>\\r\\n                <td><button class=\\\"ui icon button\\\" style=\\\"text-align: right\\\" (click)=\\\"openModal({mode: 'editUserInfo', obj: userInfo})\\\"><i\\r\\n                            class=\\\"edit icon\\\"></i></button></td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td class=\\\"two wide column\\\">Localitat</td>\\r\\n                <td>Latitude: {{ userInfo.place.lat }}  Longitude: {{ userInfo.place.long }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Username</td>\\r\\n                <td>{{ userInfo.username}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Email</td>\\r\\n                <td>{{ userInfo.email }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Birthday</td>\\r\\n                <td>{{ userInfo.birthday }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Phone</td>\\r\\n                <td>{{ userInfo.phone }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>User type</td>\\r\\n                <td>{{ userInfo.userType }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Contact phone</td>\\r\\n                <td>\\r\\n                    <ul>\\r\\n                        <li *ngFor=\\\"let contact of userInfo.contactPhones\\\">\\r\\n                            Name: {{ contact.alias}}, Phone: {{ contact.phone }}\\r\\n                        </li>\\r\\n                    </ul>\\r\\n                </td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Entity</td>\\r\\n                <td (click)=\\\"show()\\\">\\r\\n                  <p style=\\\"color: blue\\\" >{{ entityInfo.alias }} </p>\\r\\n                  <div class=\\\"ui info message\\\">\\r\\n                      <i class=\\\"close icon\\\"></i>\\r\\n                      <div class=\\\"header\\\">\\r\\n                        Click over to show the entity information.\\r\\n                      </div>\\r\\n                    </div>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <!-- <pre [innerHTML]=\\\"userInfo | json\\\"></pre> -->\\r\\n</div>\\r\\n\\r\\n<div class=\\\"entityInfo\\\" style=\\\"padding-top: 20px;\\\" *ngIf=\\\"showEntityInfo\\\">\\r\\n    <h1>Entity Information:</h1>\\r\\n    <table class=\\\"ui definition table\\\">\\r\\n        <tbody>\\r\\n            <tr>\\r\\n                <td class=\\\"two wide column\\\">Localitat</td>\\r\\n                <td>{{ entityInfo.address }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Entity Name</td>\\r\\n                <td>{{ entityInfo.alias}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Email</td>\\r\\n                <td>{{ entityInfo.email }}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Phone</td>\\r\\n                <td>{{ entityInfo.phone }}</td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <!-- <pre [innerHTML]=\\\"entityInfo | json\\\"></pre> -->\\r\\n</div>\\r\\n\\r\\n<app-dialog></app-dialog>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../services/user/user.service';\r\nimport { DialogService } from '../../services/dialog/dialog.service';\r\nimport { EntityService } from 'src/app/services/entity/entity.service';\r\n\r\n@Component({\r\n    selector: 'app-user-profile',\r\n    templateUrl: './user-profile.component.html',\r\n    styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n    entityId;\r\n    userInfo = {};\r\n    entitiesInfo = <any>[];\r\n    entityInfo = {};\r\n    showEntityInfo = false;\r\n\r\n    constructor(\r\n        private userService: UserService,\r\n        private dialogService: DialogService,\r\n        private entityService: EntityService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.userService\r\n            .verify()\r\n            .subscribe(userInfo => {\r\n                this.userInfo = userInfo;\r\n                this.entityId = userInfo.entity;\r\n                // console.log('userInfo', this.userInfo);\r\n                // console.log('entityId', this.entityId);\r\n                this.entityService\r\n                    .getEntityInfo({ id: this.entityId })\r\n                    .subscribe(entityInfo => {\r\n                        this.entityInfo = entityInfo;\r\n                    });\r\n            });\r\n    }\r\n\r\n    show() {\r\n        this.showEntityInfo = !this.showEntityInfo;\r\n    }\r\n\r\n    openModal(mode) {\r\n        this.dialogService.openDialog(mode);\r\n    }\r\n}\r\n","module.exports = \"agm-map {\\r\\n    height: 700px;\\r\\n}\\r\\n\\r\\n.controlPanel {\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\"","module.exports = \"<h1>User location:</h1>\\r\\n\\r\\n<div class=\\\"agm-map\\\">\\r\\n    <!-- Center of the map -->\\r\\n    <agm-map [latitude]=\\\"iniLat\\\" [longitude]=\\\"iniLng\\\" [scrollwheel]=\\\"true\\\" (mapClick)=\\\"mapclicked($event)\\\">\\r\\n        <!-- Markers -->\\r\\n        <agm-marker *ngFor=\\\"let p of locationsOfUser;\\\" [latitude]=p.lat [longitude]=p.lng>\\r\\n            <agm-info-window>\\r\\n                <p><strong>Latitude:</strong> {{ p.lat }}</p>\\r\\n                <p><strong>Longitude:</strong> {{ p.long }}</p>\\r\\n                <p><strong>Address:</strong> {{ p.address }}</p>\\r\\n            </agm-info-window>\\r\\n        </agm-marker>\\r\\n    </agm-map>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"controlPanel\\\">\\r\\n    <h1>Filter users by activities:</h1>\\r\\n    <p>Choose one activity</p>\\r\\n    <select class=\\\"ui dropdown\\\" (change)=\\\"filterByActivity($event)\\\">\\r\\n        <option *ngFor=\\\"let act of activities\\\" value=\\\"act.title\\\"> {{ act.title }} </option>\\r\\n    </select>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ReverseGeocodingService } from '../../services/reverseGeocoding/reverse-geocoding.service';\r\nimport { ActivitiesService } from '../../services/activities/activities.service';\r\nimport { UserLocationService } from '../../services/userLocation/user-location.service';\r\n\r\n@Component({\r\n    selector: 'app-users',\r\n    templateUrl: './users.component.html',\r\n    styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n    iniLat = 51.678418;\r\n    iniLng = 7.809007;\r\n    usersOfActivity = [];\r\n    activity;\r\n    activities;\r\n\r\n    locationsOfUser = [];\r\n\r\n    constructor(\r\n        private reverseGeoService: ReverseGeocodingService,\r\n        private activityService: ActivitiesService,\r\n        private userLocationService: UserLocationService\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.activityService.getActivities().subscribe(res => {\r\n            this.activities = res;\r\n            this.activity = res[0];\r\n            console.log('activity', this.activity);\r\n            this.usersOfActivity = this.activity.participants;\r\n            console.log('usersOfActivity: ', this.usersOfActivity);\r\n        });\r\n\r\n        this.usersOfActivity.forEach(element => {\r\n            const position = this.userLocationService.getUserLocation(\r\n                element.id\r\n            );\r\n            this.reverseGeoService\r\n                .convertToStreet(position.lat, position.lng)\r\n                .subscribe(res => {\r\n                    position['address'] = res.results[0].formatted_address;\r\n                });\r\n            this.locationsOfUser.push(position);\r\n        });\r\n\r\n        console.log('locationsOfUser: ', this.locationsOfUser);\r\n    }\r\n    mapclicked($event) {\r\n        // console.log($event);\r\n    }\r\n\r\n    filterByActivity(event) {\r\n        const activityName = event.target.value;\r\n    }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Activity } from '../../models/activity';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { MessagesService } from '../messages/messages.service';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': localStorage.getItem('token')\r\n    })\r\n};\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ActivitiesService {\r\n    actURL = 'https://grandapp.herokuapp.com/activities';\r\n\r\n    private activitySubject = new Subject<any>(); // 发送器，通知有变化\r\n    activity$ = this.activitySubject.asObservable(); // 数据储存的地方， 可以被subscribe()然后就可以获取数据\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private messageService: MessagesService\r\n    ) {}\r\n\r\n    getActivity(id): Observable<any> {\r\n        return this.http.get<any>(`${this.actURL}/${id}`, httpOptions).pipe(\r\n            catchError(this.handleError<any>('getActivity')),\r\n            tap(resp => console.log('getActivity', resp))\r\n        );\r\n    }\r\n\r\n    getActivities(): Observable<any> {\r\n        return this.http.get<any>(this.actURL, httpOptions).pipe(\r\n            catchError(this.handleError<any>('getActivities')),\r\n            tap(resp => console.log('getActivities', resp))\r\n        );\r\n    }\r\n\r\n    addActivitiy(activity): Observable<any> {\r\n        return this.http.post<any>(this.actURL, activity, httpOptions).pipe(\r\n            catchError(this.handleError<any>('addActivities')),\r\n            tap(resp => console.log('addActivities', resp))\r\n        );\r\n    }\r\n\r\n    editActivity(newActivity): Observable<any> {\r\n        return this.http\r\n            .put<any>(\r\n                `${this.actURL}/${newActivity.id}`,\r\n                newActivity,\r\n                httpOptions\r\n            )\r\n            .pipe(\r\n                catchError(this.handleError<any>('editActivities')),\r\n                tap(resp => console.log('editActivities', resp))\r\n            );\r\n    }\r\n\r\n    actDataChanged(mode) {\r\n        this.activitySubject.next(mode); // emit有变化，并且传送新的value\r\n    }\r\n\r\n    deleteActivity(idToDelete): Observable<any> {\r\n        return this.http.delete<any>(\r\n            `${this.actURL}/${idToDelete}`,\r\n            httpOptions\r\n        );\r\n    }\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            if (error.status !== 200) {\r\n                // TODO: send the error to remote logging infrastructure\r\n                // console.error(error);\r\n                // TODO: better job of transforming error for user consumption\r\n                // console.log(`${operation} failed: ${error.message}`);\r\n                // Catch the status code and do some actions if it is a particular situation\r\n                this.messageService.setMessage(error.error);\r\n            }\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { MessagesService } from '../../services/messages/messages.service';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': localStorage.getItem('token')\r\n    })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n    private user = new Subject<string>(); // 发送器，通知有变化\r\n    user$ = this.user.asObservable(); // 数据储存的地方， 可以被subscribe()然后就可以获取数据\r\n\r\n    private authrUrl = 'https://grandapp.herokuapp.com/login';\r\n    constructor(\r\n        private http: HttpClient,\r\n        public jwtHelper: JwtHelperService,\r\n        // private cookieService: CookieService,\r\n        private router: Router,\r\n        private messageService: MessagesService\r\n    ) {}\r\n\r\n    changeUserStatus(value) {\r\n        this.user.next(value); // emit有变化，并且传送新的value\r\n    }\r\n\r\n    public isAuthenticated(): boolean {\r\n        const token = localStorage.getItem('token');\r\n        // console.log('==>', token);\r\n        if (token) {\r\n            // Check whether the token is expired and return\r\n            // true or false\r\n            // return !this.jwtHelper.isTokenExpired(token);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    login(user): Observable<any> {\r\n        return this.http.post<any>(this.authrUrl, user).pipe(\r\n            catchError(this.handleError<any>('login')),\r\n            tap(resp => console.log('loginResponse', resp))\r\n        );\r\n    }\r\n\r\n    logout() {\r\n        localStorage.clear();\r\n        this.router.navigate(['/login']);\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            if (error.status !== 200) {\r\n                // TODO: send the error to remote logging infrastructure\r\n                console.error(error);\r\n                // TODO: better job of transforming error for user consumption\r\n                // console.log(`${operation} failed: ${error.message}`);\r\n                // Catch the status code and do some actions if it is a particular situation\r\n                this.messageService.setMessage(error.error);\r\n            }\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n    private dialog = new Subject<any>(); // 发送器，通知有变化\r\n    dialog$ = this.dialog.asObservable(); // 数据储存的地方， 可以被subscribe()然后就可以获取数据\r\n\r\n    constructor() {}\r\n\r\n    openDialog(mode) {\r\n        this.dialog.next(mode); // emit有变化，并且传送新的value\r\n    }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { MessagesService } from '../messages/messages.service';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': localStorage.getItem('token')\r\n    })\r\n};\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class EntityService {\r\n    entitiesURL = 'https://grandapp.herokuapp.com/entities';\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private messageService: MessagesService\r\n    ) {}\r\n\r\n    getEntities(): Observable<any> {\r\n        return this.http.get<any>(this.entitiesURL, httpOptions).pipe(\r\n            catchError(this.handleError<any>('getEntities')),\r\n            tap(resp => console.log('getEntities', resp))\r\n        );\r\n    }\r\n\r\n    getEntityInfo(entitiyId): Observable<any> {\r\n        return this.http.get<any>(`${this.entitiesURL}/${entitiyId.id}`, httpOptions).pipe(\r\n            catchError(this.handleError<any>('getEntityInfo')),\r\n            tap(resp => console.log('getEntityInfo', resp))\r\n        );\r\n    }\r\n    getEntityStatisticsActivities(entitiyId): Observable<any> {\r\n        console.log('asd: ', entitiyId);\r\n        return this.http.get<any>(`${this.entitiesURL}/${entitiyId}/statistics/activities`, httpOptions).pipe(\r\n            catchError(this.handleError<any>('getEntityStatisticsActivities')),\r\n            tap(resp => console.log('getEntityStatisticsActivities', resp))\r\n        );\r\n    }\r\n    getEntityStatisticsUsers(entitiyId): Observable<any> {\r\n        return this.http.get<any>(`${this.entitiesURL}/${entitiyId}/statistics/users`, httpOptions).pipe(\r\n            catchError(this.handleError<any>('getEntityStatisticsUsers')),\r\n            tap(resp => console.log('getEntityStatisticsUsers', resp))\r\n        );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            if (error.status !== 200) {\r\n                // TODO: send the error to remote logging infrastructure\r\n                // console.error(error);\r\n                // TODO: better job of transforming error for user consumption\r\n                // console.log(`${operation} failed: ${error.message}`);\r\n                // Catch the status code and do some actions if it is a particular situation\r\n                this.messageService.setMessage(error.error);\r\n            }\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuardService {\r\n    constructor(public auth: AuthService, public router: Router) {}\r\n    canActivate(): boolean {\r\n        if (!this.auth.isAuthenticated()) {\r\n            this.router.navigate(['/login']); // if not authenticated, then back to the /login page\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MessagesService {\r\n    message;\r\n    constructor() {}\r\n\r\n    setMessage(message) {\r\n        this.message = message;\r\n    }\r\n\r\n    getMessage() {\r\n        return this.message;\r\n    }\r\n\r\n    getExists(): boolean {\r\n        return this.message;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, of } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ReverseGeocodingService {\r\n    googleMapUrl = 'https://maps.googleapis.com/maps/api/geocode/json';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    convertToStreet(latitude, longitude): Observable<any> {\r\n        const lat = latitude;\r\n        const lng = longitude;\r\n        return this.http.get<any>(\r\n            `${this.googleMapUrl}?latlng=${lat},${lng}&key=AIzaSyDBNBmRlzQDTVzB07XLJbuusxIh84qXOOg`\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, of } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SidebarService {\r\n    private opened = new Subject<string>(); // 发送器，通知有变化\r\n    opened$ = this.opened.asObservable(); // 数据储存的地方， 可以被subscribe()然后就可以获取数据\r\n\r\n    constructor() {}\r\n\r\n    changeSidebarStatus(value) {\r\n        this.opened.next(value);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { MessagesService } from '../messages/messages.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UploadImagesService {\r\n    url = 'https://grandapp.herokuapp.com/imagesJson';\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private messageService: MessagesService\r\n    ) {}\r\n\r\n    upload(imageBase64) {\r\n        return this.http.post<any>(this.url, { base64: imageBase64 }).pipe(\r\n            catchError(this.handleError<any>('uploadImage')),\r\n            tap(resp => console.log('uploadImage', resp))\r\n        );\r\n    }\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            if (error.status !== 200) {\r\n                // TODO: send the error to remote logging infrastructure\r\n                // console.error(error);\r\n                // TODO: better job of transforming error for user consumption\r\n                // console.log(`${operation} failed: ${error.message}`);\r\n                // Catch the status code and do some actions if it is a particular situation\r\n                this.messageService.setMessage(error.error);\r\n            }\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { MessagesService } from '../messages/messages.service';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': localStorage.getItem('token')\r\n    })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    verifyURL = 'https://grandapp.herokuapp.com/verify';\r\n    userURL = 'https://grandapp.herokuapp.com/users';\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private messageService: MessagesService\r\n    ) {}\r\n\r\n    verify(): Observable<any> {\r\n        return this.http.get<any>(this.verifyURL, httpOptions).pipe(\r\n            catchError(this.handleError<any>('verify')),\r\n            tap(resp => console.log('verify', resp))\r\n        );\r\n    }\r\n\r\n    getUserInfo(id): Observable<any> {\r\n        return this.http.get<any>(`${this.userURL}/${id}`, httpOptions).pipe(\r\n            catchError(this.handleError<any>('getUserInfo')),\r\n            tap(resp => console.log('getUserInfo', resp))\r\n        );\r\n    }\r\n\r\n    updateUserInfo(newUser, userID): Observable<any> {\r\n        return this.http\r\n            .put<any>(`${this.userURL}/${userID}`, newUser, httpOptions)\r\n            .pipe(\r\n                catchError(this.handleError<any>('updateUserInfo')),\r\n                tap(resp => console.log('updateUserInfo', resp))\r\n            );\r\n    }\r\n\r\n    getAllUsers(): Observable<any> {\r\n        return this.http.get<any>(this.userURL, httpOptions).pipe(\r\n            catchError(this.handleError<any>('getAllUser')),\r\n            tap(resp => console.log('getAllUser', resp))\r\n        );\r\n    }\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n            if (error.status !== 200) {\r\n                // TODO: send the error to remote logging infrastructure\r\n                // console.error(error);\r\n                // TODO: better job of transforming error for user consumption\r\n                // console.log(`${operation} failed: ${error.message}`);\r\n                // Catch the status code and do some actions if it is a particular situation\r\n                this.messageService.setMessage(error.error);\r\n            }\r\n            // Let the app keep running by returning an empty result.\r\n            return of(result as T);\r\n        };\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserLocationService {\r\n    locations = [\r\n        {\r\n            userID: '1',\r\n            lat: 51.575428,\r\n            lng: 7.39917,\r\n            address: ''\r\n        },\r\n        {\r\n            userID: '2',\r\n            lat: 51.576428,\r\n            lng: 7.738917,\r\n            address: ''\r\n        },\r\n        {\r\n            userID: '3',\r\n            lat: 51.573428,\r\n            lng: 7.839317,\r\n            address: ''\r\n        },\r\n        {\r\n            userID: '4',\r\n            lat: 51.575788,\r\n            lng: 7.837917,\r\n            address: ''\r\n        }\r\n    ];\r\n\r\n    constructor() {}\r\n\r\n    getUserLocation(id) {\r\n        const lat = this.locations.find(user => user.userID == id).lat;\r\n        const lng = this.locations.find(user => user.userID == id).lng;\r\n        return { lat, lng };\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}